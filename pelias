#! /usr/bin/env bash

help_message=$(cat << EOF
usage: pelias --help | <subcommand> <script> [scriptArgs]

	--help: Print this help message and exit.
	<subcommand>: The name of the repository under github.com/pelias/ to
		target.
	<script>: The script defined inside the <subcommand> repo's
		package.json to run.
	[args]: Any args to pass to <script>
EOF
)

if [ -z "$1" ]; then
	>&2 echo "Missing subcommand."
	>&2 echo "$help_message"
	exit 1
elif [ "$1" = "--help" ]; then
	echo "$help_message"
	exit 0
else
	IFS="#"
	components=($1)
	subcommand="${components[0]}"
	branch=${components[1]}
	if [ "$branch" = "" ]; then
		branch=master
	fi
	script="$2"
	script_args=(${@:3})
fi

pelias_dir=~/.pelias
if ! [ -d "$pelias_dir" ]; then
	mkdir "$pelias_dir"
fi

cd "$pelias_dir"
if ! [ -d "$subcommand" ]; then
	echo "$subcommand not found in cache."
	echo "Cloning $subcommand."
	git clone -q "https://github.com/pelias/$subcommand"
	echo "Installing dependencies."
	cd "$subcommand"
	git checkout -q $branch
	npm install > /dev/null
else
	cd "$subcommand"
	git checkout -q $branch
	if ! [ "$(git fetch --dry-run)" = "" ]; then
		echo "Updating $subcommand."
		git pull
		npm install
	fi
fi

npm -s run $script -- $script_args
